@import "tailwindcss";
@plugin "tailwindcss-animate";
@tailwind utilities;

@theme {
  /* ========== Terminal Theme Colors ========== */
  --color-terminal-bg: #1a1f2c;
  --color-terminal-text: #d6bcfa;
  --color-terminal-accent: #9b87f5;
  --color-terminal-muted: #403e43;
  --color-terminal-highlight: #ffffff;
  --color-terminal-secondary: #8a898c;

  /* ========== General Color Scheme ========== */
  --color-gblue: #1B1B2F;
  --color-lightgblue: #2D2C40;
  --color-midgray: #3F3F5A;
  --color-lightgray: #C0C1C8;

  /* ========== Semantic Colors ========== */
  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));
  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));
  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  /* ========== Border Radius ========== */
  --radius: 0.5rem;
  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  /* ========== Font Families ========== */
  --font-pixel: 'Press Start 2P', monospace;
  --font-terminal: 'VT323', monospace;

  /* ========== Animations ========== */
  --animate-scanline: scanline 8s linear infinite;
  --animate-glitch: glitch 0.3s ease-in-out infinite;
  --animate-flicker: flicker 0.15s ease-in-out infinite;

  @keyframes scanline {
    0% { transform: translateY(0); }
    100% { transform: translateY(100%); }
  }

  @keyframes glitch {
    0%, 100% { transform: translateX(0); }
    33% { transform: translateX(2px); }
    66% { transform: translateX(-2px); }
  }

  @keyframes flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
}

@custom-variant dark (&:is(.dark *));

/* Default border color for Tailwind v4 compatibility */
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
  body {
    @apply antialiased bg-terminal-bg text-terminal-text;
    text-rendering: optimizeLegibility;
  }
}

::selection {
  @apply bg-terminal-accent/30 text-terminal-highlight;
}

/* Enhanced glitch effect */
@keyframes textShadowGlitch {
  0%, 14% { text-shadow: 0.05em 0 0 rgba(255,0,0,0.75), -0.025em -0.05em 0 rgba(0,255,0,0.75), 0.025em 0.05em 0 rgba(0,0,255,0.75); }
  15%, 49% { text-shadow: -0.05em -0.025em 0 rgba(255,0,0,0.75), 0.025em 0.025em 0 rgba(0,255,0,0.75), -0.05em -0.05em 0 rgba(0,0,255,0.75); }
  50%, 99% { text-shadow: 0.025em 0.05em 0 rgba(255,0,0,0.75), 0.05em 0 0 rgba(0,255,0,0.75), 0 -0.05em 0 rgba(0,0,255,0.75); }
  100% { text-shadow: -0.025em 0 0 rgba(255,0,0,0.75), -0.025em -0.025em 0 rgba(0,255,0,0.75), -0.025em -0.05em 0 rgba(0,0,255,0.75); }
}

/* Smooth collapse animation */
@keyframes collapseDown {
  from { height: 0; opacity: 0; }
  to { height: var(--radix-collapsible-content-height); opacity: 1; }
}

@keyframes collapseUp {
  from { height: var(--radix-collapsible-content-height); opacity: 1; }
  to { height: 0; opacity: 0; }
}

.animate-glitch { animation: textShadowGlitch 1s infinite; }

[data-state="open"] > .collapsible-content {
  animation: collapseDown 300ms ease-out;
}

[data-state="closed"] > .collapsible-content {
  animation: collapseUp 300ms ease-in;
}

/* Content detection */
@source "./app/**/*.{ts,tsx,js,jsx}";
@source "./components/**/*.{ts,tsx,js,jsx}"; 
@source "./pages/**/*.{ts,tsx,js,jsx,mdx}";
